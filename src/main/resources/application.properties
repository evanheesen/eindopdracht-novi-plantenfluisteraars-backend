server.port=8081

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max DBFile size.
spring.servlet.multipart.max-file-size=2MB
# Max Request Size
spring.servlet.multipart.max-request-size=2MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
DBFile.upload-dir=uploads

# datasource
# PostgreSQL
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/ericvanheesen
spring.datasource.username=springboot
spring.datasource.password=springboot
spring.datasource.driver-class-name=org.postgresql.Driver

# jpa
spring.jpa.database=postgresql
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=true

# database initialization
spring.sql.init.mode=update
spring.sql.init.platform=postgres

# Hibernate Properties
spring.datasource.initialization-mode=always
# hier drop neerzetten als alle data in database geleegd moet worden bij opnieuw opstarten
spring.jpa.hibernate.ddl-auto=create-drop

# Hibernate logging
logging.level.org.hibernate.SQL= DEBUG
